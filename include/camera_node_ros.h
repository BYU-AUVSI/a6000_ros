#pragma once
#include "camera_connector.h"
#include <ros/ros.h>
#include <image_transport/image_transport.h>
#include <cv_bridge/cv_bridge.h>
#include <sensor_msgs/Image.h>
#include <opencv/cv.hpp>

// Our services. These headers are
// auto-generated by catkin from the files
// in the the srv/ directory (unless from std_srvs)
#include <std_srvs/Trigger.h>
#include "a6000_ros/ConfigGet.h"

using namespace std;

class GphotoCameraROS {
public:
    GphotoCameraROS();

    void run(); //never returns

private:

    // ROS service callback for camera configuration
    bool configListServiceCallback(std_srvs::Trigger::Request &req, std_srvs::Trigger::Response &res);
    bool configGetServiceCallback(a6000_ros::ConfigGet::Request &req, a6000_ros::ConfigGet::Response &res);

    ros::ServiceServer config_list_srv_;

    CameraConnector cam_;
    ros::NodeHandle nh_private_;
    image_transport::ImageTransport img_transport_;
    image_transport::Publisher image_pub_;
};